import os
import asyncio
from telegram import Update
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
)
from main_giga import ImageAnalyzer as GigaAnalyzer
from main_prplx import ImageAnalyzer as PrplxAnalyzer

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: user_id -> 'giga' or 'prplx'
USER_STATES = {}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è GigaChat
GIGA_CREDENTIALS = os.getenv("GIGACHAT_CREDENTIALS", "api_key")
GIGA_SCOPE = "GIGACHAT_API_PERS"
GIGA_MODEL = "GigaChat-Max"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Perplexity
PRPLX_APIKEY = os.getenv("PRPLX_API_KEY", "api_key")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–æ–≤
giga_analyzer = GigaAnalyzer(GIGA_CREDENTIALS, GIGA_SCOPE, GIGA_MODEL)
prplx_analyzer = PrplxAnalyzer(PRPLX_APIKEY)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–π –Ω–µ–π—Ä–æ—Å–µ—Ç–∏"""
    user_id = update.effective_user.id
    USER_STATES[user_id] = "giga"  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é GigaChat

    await update.message.reply_text(
        "üåø –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ png –∏–ª–∏ jpg —Ñ–∞–π–ª —Å —Ä–∞—Å—Ç–µ–Ω–∏–µ–º –∏–ª–∏ –≥—Ä–∏–±–æ–º, "
        "–∞ —è –æ—Ç–≤–µ—á—É —á—Ç–æ —ç—Ç–æ –∏ –¥–∞–º –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\n\n"
        "ü§ñ –¢–µ–∫—É—â–∞—è –Ω–µ–π—Ä–æ—Å–µ—Ç—å: GigaChat\n"
        "üìù /switch ‚Äî –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ Perplexity\n"
        "‚ùì /help ‚Äî —Å–ø—Ä–∞–≤–∫–∞"
    )


async def switch(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /switch - –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º–∏"""
    user_id = update.effective_user.id
    current = USER_STATES.get(user_id, "giga")

    # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º
    USER_STATES[user_id] = "prplx" if current == "giga" else "giga"

    model_name = "Perplexity" if USER_STATES[user_id] == "prplx" else "GigaChat"

    await update.message.reply_text(
        f"‚úÖ –ù–µ–π—Ä–æ—Å–µ—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∞!\n\n"
        f"ü§ñ –¢–µ–ø–µ—Ä—å –∞–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤–µ–¥–µ—Ç—Å—è —á–µ—Ä–µ–∑: {model_name}\n\n"
        f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ png –∏–ª–∏ jpg —Ñ–∞–π–ª —Å —Ä–∞—Å—Ç–µ–Ω–∏–µ–º –∏–ª–∏ –≥—Ä–∏–±–æ–º!"
    )


async def help_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /help - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞"""
    await update.message.reply_text(
        "üìñ –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:\n\n"
        "1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ä–∞—Å—Ç–µ–Ω–∏—è –∏–ª–∏ –≥—Ä–∏–±–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ PNG/JPG\n"
        "2. –ë–æ—Ç –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –≤—ã–¥–∞—Å—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:\n"
        "   ‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ (—Ä—É—Å—Å–∫–æ–µ –∏ –ª–∞—Ç–∏–Ω—Å–∫–æ–µ)\n"
        "   ‚Ä¢ –°–µ–º–µ–π—Å—Ç–≤–æ\n"
        "   ‚Ä¢ –ö–ª—é—á–µ–≤—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏\n"
        "   ‚Ä¢ –°—Ä–µ–¥—É –æ–±–∏—Ç–∞–Ω–∏—è\n"
        "   ‚Ä¢ –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã\n\n"
        "üîÑ /switch ‚Äî –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–µ–π—Ä–æ—Å–µ—Ç—å (GigaChat ‚áÑ Perplexity)\n"
        "üè† /start ‚Äî –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
    )


async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π - –æ—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∞–Ω–∞–ª–∏–∑–∞"""
    user_id = update.effective_user.id

    # –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ
    photos = update.message.photo
    if not photos:
        await update.message.reply_text(
            "‚ö†Ô∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ä–∞—Å—Ç–µ–Ω–∏—è –∏–ª–∏ –≥—Ä–∏–±–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ PNG/JPG."
        )
        return

    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    processing_msg = await update.message.reply_text("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...")

    try:
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        file_id = photos[-1].file_id
        photo_file = await context.bot.get_file(file_id)
        filename = f"temp_{user_id}_{int(update.message.date.timestamp())}.jpg"
        await photo_file.download_to_drive(filename)

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å
        model = USER_STATES.get(user_id, "giga")

        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ –≤—ã–±—Ä–∞–Ω–Ω—É—é –Ω–µ–π—Ä–æ—Å–µ—Ç—å
        if model == "giga":
            giga_analyzer.add_image(filename)
            result = giga_analyzer.identify_object(filename)
        else:  # prplx
            prplx_analyzer.add_image(filename)
            result = prplx_analyzer.identify_object(filename)

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –æ–±—Ä–∞–±–æ—Ç–∫–µ
        await processing_msg.delete()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        await update.message.reply_text(
            f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞:\n\n{result}\n\n"
            f"üîÑ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞!"
        )

        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        if os.path.exists(filename):
            os.remove(filename)

    except Exception as e:
        await processing_msg.delete()
        await update.message.reply_text(
            f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:\n{str(e)}\n\n"
            f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥—Ä—É–≥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ."
        )


async def handle_document(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏—Ç —Ñ–∞–π–ª –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç)"""
    await update.message.reply_text(
        "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞–∫ —Ñ–æ—Ç–æ, –∞ –Ω–µ –∫–∞–∫ —Ñ–∞–π–ª/–¥–æ–∫—É–º–µ–Ω—Ç.\n"
        "–ü—Ä–æ—Å—Ç–æ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —á–∞—Ç."
    )


def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    # –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ os.getenv()
    # –í–∞—Ä–∏–∞–Ω—Ç 1: –ü–æ–ª—É—á–∏—Ç—å –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
    token = os.getenv("TELEGRAM_BOT_TOKEN")

    # –í–∞—Ä–∏–∞–Ω—Ç 2: –ï—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–∫–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
    if not token:
        token = "8481248627:AAFEez1gAQwI_unfiEacnyRqrYqcpJRTq-I"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–æ–∫–µ–Ω–∞
    if not token:
        print("‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_BOT_TOKEN")
        return

    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = ApplicationBuilder().token(token).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("switch", switch))
    app.add_handler(CommandHandler("help", help_cmd))

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    app.add_handler(MessageHandler(filters.PHOTO, handle_photo))
    app.add_handler(MessageHandler(filters.Document.IMAGE, handle_document))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    app.run_polling()


if __name__ == "__main__":
    main()
