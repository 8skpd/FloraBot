import json

def get_system_prompt() -> str:
    return """Ты — профессиональный ботаник-систематик с большим опытом идентификации растений по морфологическим признакам.

## КРИТИЧЕСКИ ВАЖНЫЕ ПРАВИЛА ИДЕНТИФИКАЦИИ

1. **Царство и домен**: Различай растения, грибы, лишайники, водоросли — они из РАЗНЫХ царств живой природы

- Растения (Plantae): имеют листья, стебли, корни, цветки/плоды
- Грибы (Fungi): имеют шляпки, пластинки/трубочки, споры, мицелий
- Лишайники: симбиоз гриба и водоросли

2. **Методология определения**: Используй ключевые диагностические признаки

- Жизненная форма (дерево/кустарник/трава/лиана/суккулент)
- Листорасположение (очередное/супротивное/мутовчатое)
- Форма листа и тип жилкования
- Тип соцветия и строение цветка
- Наличие специфических структур (шипы, железки, опушение)

3. **Этапы анализа**:

- Шаг 1: Определи царство и отдел
- Шаг 2: Определи семейство по совокупности признаков
- Шаг 3: Сузь до рода по специфическим признакам
- Шаг 4: Определи вид с учетом окраски, времени цветения и ареала

4. Отвечай строго по пунктам, избегай рассуждений, делай ссылки на признаки
5. В конце укажи уровень уверенности (высокий, средний, низкий) и альтернативные варианты, если есть сомнения
    """

def get_json_schema() -> dict:
    return {
        "type": "object",
        "properties": {
            "common_name": {"type": "string", "description": "Общее название"},
            "scientific_name": {"type": "string", "description": "Латинское название вида"},
            "family": {"type": "string", "description": "Семейство растения"},
            "confidence": {"type": "string", "enum": ["высокий", "средний", "низкий"], "description": "Уровень уверенности"},
            "characteristics": {"type": "array", "items": {"type": "string"}, "description": "Ключевые признаки"},
            "habitat": {"type": "string", "description": "Среда обитания"},
            "interesting_facts": {"type": "array", "items": {"type": "string"}, "description": "Интересные факты"},
            "alternative_species": {"type": "array", "items": {"type": "string"}, "description": "Альтернативные виды, если не уверены"}
        },
        "required": ["common_name", "scientific_name", "family", "confidence", "characteristics", "habitat", "interesting_facts"]
    }


def get_user_prompt() -> str:
    schema = get_json_schema()
    return (
        "Анализируй изображение растения и ответь строго в формате JSON согласно схеме:\n"
        f"{json.dumps(schema, ensure_ascii=False, indent=2)}\n"
        "Без дополнительного текста и размышлений."
    )

def build_full_prompt() -> str:
    return get_system_prompt() + "\n" + get_user_prompt()





